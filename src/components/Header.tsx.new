'use client';

import Link from 'next/link';
import Image from 'next/image';
import { useState } from 'react';
import { Menu } from 'lucide-react';
import { Button } from '@/components/ui/button';
import {
  NavigationMenu,
  NavigationMenuContent,
  NavigationMenuItem,
  NavigationMenuLink,
  NavigationMenuList,
  NavigationMenuTrigger,
} from '@/components/ui/navigation-menu';
import { Sheet, SheetContent, SheetTrigger } from '@/components/ui/sheet';

const Header = () => {
  const [isOpen, setIsOpen] = useState(false);

  const products = [
    {
      category: 'Embedded Systems',
      items: [
        { name: 'Intelligent Drivers Generator', href: '/products/embedded-systems/intelligent-drivers-generator' },
        { name: 'Smart HAL Synthesizer', href: '/products/embedded-systems/smart-hal-synthesizer' },
        { name: 'Intelligent Protocol Generator', href: '/products/embedded-systems/intelligent-protocol-generator' },
        { name: 'Firmware Snippet Generator', href: '/products/embedded-systems/firmware-snippet-generator' },
        { name: 'Porting Firmware For MCUs', href: '/products/embedded-systems/porting-firmware-mcus' },
      ]
    },
    {
      category: 'Edge AI',
      items: [
        { name: 'Smart Model Compression', href: '/products/edge-ai/smart-model-compression' },
        { name: 'EdgeAI Model Validator', href: '/products/edge-ai/edgeai-model-validator' },
      ]
    },
    {
      category: 'FPGA Workflows',
      items: [
        { name: 'HDL Code Generation & Optimization', href: '/products/fpga/hdl-code-generation' },
        { name: 'BitStream Generation', href: '/products/fpga/bitstream-generation' },
        { name: 'Test Bench Automation', href: '/products/fpga/testbench-automation' },
      ]
    }
  ];

  return (
    <header className="sticky top-0 z-50 w-full border-b border-gray-800 bg-gray-950/95 backdrop-blur-sm">
      <div className="container mx-auto flex h-16 items-center justify-between px-4">
        <div className="flex items-center gap-8">
          {/* Logo */}
          <Link href="/" className="flex items-center">
            <Image src="/logo.svg" alt="MCUZA Logo" width={120} height={32} className="h-8 w-auto" priority />
          </Link>

          {/* Desktop Navigation */}
          <div className="hidden md:flex items-center gap-6">
            <NavigationMenu>
              <NavigationMenuList className="gap-2">
                <NavigationMenuItem>
                  <NavigationMenuTrigger className="h-9 px-4">Products</NavigationMenuTrigger>
                  <NavigationMenuContent>
                    <div className="grid w-[600px] gap-4 p-4">
                      {products.map((category) => (
                        <div key={category.category}>
                          <h4 className="mb-2 text-sm font-medium text-primary">{category.category}</h4>
                          <div className="grid gap-2">
                            {category.items.map((item) => (
                              <NavigationMenuLink key={item.name} asChild>
                                <Link href={item.href} className="block rounded-md p-2 hover:bg-accent hover:text-accent-foreground">
                                  <div className="text-sm font-medium">{item.name}</div>
                                </Link>
                              </NavigationMenuLink>
                            ))}
                          </div>
                        </div>
                      ))}
                    </div>
                  </NavigationMenuContent>
                </NavigationMenuItem>
                <NavigationMenuItem>
                  <Link href="/rapid-prototyping" className="inline-flex h-9 items-center px-4 text-sm font-medium">
                    Rapid Prototyping
                  </Link>
                </NavigationMenuItem>
                <NavigationMenuItem>
                  <Link href="/docs" className="inline-flex h-9 items-center px-4 text-sm font-medium">
                    Docs
                  </Link>
                </NavigationMenuItem>
                <NavigationMenuItem>
                  <Link href="/about" className="inline-flex h-9 items-center px-4 text-sm font-medium">
                    About
                  </Link>
                </NavigationMenuItem>
              </NavigationMenuList>
            </NavigationMenu>
          </div>
        </div>

        {/* Right side buttons */}
        <div className="hidden md:flex items-center gap-4">
          <Button variant="ghost" asChild className="text-sm">
            <Link href="/login">Sign In</Link>
          </Button>
          <Button asChild className="text-sm bg-primary hover:bg-primary/90">
            <Link href="/signup">Get Started</Link>
          </Button>
        </div>

        {/* Mobile menu button */}
        <Sheet open={isOpen} onOpenChange={setIsOpen}>
          <SheetTrigger asChild className="md:hidden">
            <Button variant="ghost" size="icon" className="h-9 w-9">
              <Menu className="h-5 w-5" />
              <span className="sr-only">Toggle menu</span>
            </Button>
          </SheetTrigger>
          
          {/* Mobile menu content */}
          <SheetContent side="right" className="w-80">
            <Link href="/" className="flex items-center mb-8" onClick={() => setIsOpen(false)}>
              <Image src="/logo.svg" alt="MCUZA Logo" width={100} height={28} className="h-7 w-auto" priority />
            </Link>
            <nav className="flex flex-col gap-6">
              <div className="space-y-6">
                {products.map((category) => (
                  <div key={category.category}>
                    <h4 className="text-sm font-medium text-muted-foreground mb-2">{category.category}</h4>
                    <div className="space-y-2 pl-1">
                      {category.items.map((item) => (
                        <Link
                          key={item.name}
                          href={item.href}
                          className="block text-sm py-1 hover:text-primary transition-colors"
                          onClick={() => setIsOpen(false)}
                        >
                          {item.name}
                        </Link>
                      ))}
                    </div>
                  </div>
                ))}
              </div>
              
              <div className="space-y-2">
                <Link
                  href="/rapid-prototyping"
                  className="block text-sm py-2 hover:text-primary transition-colors"
                  onClick={() => setIsOpen(false)}
                >
                  Rapid Prototyping
                </Link>
                <Link
                  href="/docs"
                  className="block text-sm py-2 hover:text-primary transition-colors"
                  onClick={() => setIsOpen(false)}
                >
                  Docs
                </Link>
                <Link
                  href="/about"
                  className="block text-sm py-2 hover:text-primary transition-colors"
                  onClick={() => setIsOpen(false)}
                >
                  About
                </Link>
              </div>

              <div className="space-y-2 pt-6 border-t border-gray-800">
                <Button variant="ghost" asChild className="w-full justify-start" onClick={() => setIsOpen(false)}>
                  <Link href="/login">Sign In</Link>
                </Button>
                <Button asChild className="w-full" onClick={() => setIsOpen(false)}>
                  <Link href="/signup">Get Started</Link>
                </Button>
              </div>
            </nav>
          </SheetContent>
        </Sheet>
      </div>
    </header>
  );
};

export default Header;
